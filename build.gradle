import java.time.format.DateTimeFormatter
import java.time.LocalDateTime

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.demo'
version = '0.0.1'
sourceCompatibility = '17'

bootJar {
    archiveFileName = 'spring-jwt-demo.jar'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // DB (Oracle)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

    // JWT
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    // The Bouncy Castle Crypto Package For Java
    implementation "org.bouncycastle:bcprov-jdk15on:1.70"

    // OpenApi + Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

    // Apache commons
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('createEmptySqlFile') {
    description 'Create empty sql file'
    doLast {
        def version_prefix = project.version
        def version = LocalDateTime.now().format(DateTimeFormatter.ofPattern('yyyyMMdd.HHmm.ssSSS'))
        String fileName = "V${version_prefix}.${version}__RENAME_ME.sql"

        def scriptsLocation = "${sourceSets.main.resources.sourceDirectories.first().path}/db/oracle"
        new File("${scriptsLocation}/${fileName}").createNewFile()

        println "Created sql file: ${fileName}"
    }
}
